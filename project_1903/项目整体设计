

1.使用django 内置的User系统、权限系统
2.重新定制
3.前后台使用同一个


#自定义User模型
1.单独创建一个应用   projectauth 用来管理用户系统
2.全部重写  继承自 AbstractBaseUser
3.定义UserManager
4.settings.py中  定义 AUTH_USER_MODEL
5.映射到数据库中


#前后台公用一个 用户账号

1.只需要一个登录界面即可
   前期后台设置一个登录界面 仅仅是为了测试
   后期全部走一个登录界面
2. 后期登录界面 是一个模态框 ajax 异步请求 所以登录的视图用json交互

3.所有的用户逻辑都放到  projectauth 应用中

#应用管理
所有的应用集中放到一起  我们把它放到 apps中


├── project_1903
│   ├── apps
│   │   ├── cms
│   │   │   ├── admin.py
│   │   │   ├── apps.py
│   │   │   ├── __init__.py
│   │   │   ├── migrations
│   │   │   ├── models.py
│   │   │   ├── tests.py
│   │   │   └── views.py
│   │   ├── __init__.py
│   │   ├── news
│   │   │   ├── admin.py
│   │   │   ├── apps.py
│   │   │   ├── __init__.py
│   │   │   ├── migrations
│   │   │   ├── models.py
│   │   │   ├── tests.py
│   │   │   └── views.py
│   │   └── projectauth
│   │       ├── admin.py
│   │       ├── apps.py
│   │       ├── __init__.py
│   │       ├── migrations
│   │       ├── models.py
│   │       ├── tests.py
│   │       └── views.py
│   ├── front
│   │   ├── dist
│   │   │   ├── css
│   │   │   ├── images
│   │   │   └── js
│   │   ├── src
│   │   │   ├── css
│   │   │   ├── images
│   │   │   └── js
│   │   └── templates
│   │       ├── base
│   │       ├── cms
│   │       └── news
│   ├── manage.py
│   ├── project_1903
│   │   ├── __init__.py
│   │   ├── __pycache__
│   │   │   ├── __init__.cpython-36.pyc
│   │   │   └── settings.cpython-36.pyc
│   │   ├── settings.py
│   │   ├── urls.py
│   │   ├── wsgi.py
│   │   └── 基础配置
│   └── 项目整体设计
└── README.md

